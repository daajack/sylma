<?xml version="1.0" encoding="utf-8"?>
<tst:tests
  xmlns:tst="http://www.sylma.org/modules/tester/parser"
  xmlns="http://www.sylma.org/storage/sql/test"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:ssd="http://2013.sylma.org/schema/ssd"
>
  <tst:description>Schema API</tst:description>
  <tst:datas name="mysql://user">
  </tst:datas>
  <tst:test name="Default type and ssd type">
    <tst:expected>
      $sNS = 'http://2013.sylma.org/storage/sql/test/sample1';
      $schema = $manager->getSchema('samples/user2b.xql');

      $user = $schema->getElement();
      $name = $user->getElement('name', $sNS);
      $email = $user->getElement('email', $sNS);

      $manager->assertEqual($name->getName(), 'name');
      $manager->assertTrue($name->getType()->isSimple());
      $manager->assertEqual($name->getType()->getName(), 'string');
      $manager->assertEqual($email->getName(), 'email');
      $manager->assertEqual($email->getType()->getName(), 'email');
      $manager->assertEqual($email->getType()->getNamespace(), 'http://2013.sylma.org/schema/ssd');

      return true;
    </tst:expected>
  </tst:test>
  <tst:test name="Extends types">
    <tst:expected>
      $sNS = 'http://2013.sylma.org/storage/sql/test/sample1';
      $schema = $manager->getSchema('samples/user3.xql');

      $user = $schema->getElement();
      $name = $user->getElement('name', $sNS);
      $email = $user->getElement('email', $sNS);

      $string = $schema->getType('string', $schema->getNamespace('xs'));
      $sqlstring = $schema->getType('string', $schema->getNamespace('sql'));

      $manager->assertTrue($name->getType()->doExtends($string));
      $manager->assertTrue($email->getType()->doExtends($string));
      $manager->assertTrue($name->getType()->doExtends($sqlstring));
      $manager->assertTrue($email->getType()->doExtends($sqlstring));

      return true;
    </tst:expected>
  </tst:test>
  <tst:test name="Rule extended">
    <tst:expected>
      $sNS = 'http://2013.sylma.org/storage/sql/test/sample1';
      $schema = $manager->getSchema('samples/user3.xql');

      $user = $schema->getElement();
      $name = $user->getElement('name', $sNS);
      $email = $user->getElement('email', $sNS);
      $content = $user->getElement('content', $sNS);

      $string = $schema->getType('string', $schema->getNamespace('xs'));
      $sqlstring = $schema->getType('string', $schema->getNamespace('sql'));

      $manager->assertEqual($name->getType()->getDefine()->getRule('maxLength'), '64');
      $manager->assertEqual($email->getType()->getDefine()->getRule('maxLength'), '255');
      $manager->assertEqual($content->getType()->getDefine()->getRule('maxLength'), '65535');

      return true;
    </tst:expected>
  </tst:test>
  <tst:test name="ID extended">
    <tst:expected>
      $sNS = 'http://2013.sylma.org/storage/sql/test/sample1';
      $schema = $manager->getSchema('samples/user3.xql');

      $user = $schema->getElement();
      $id = $user->getElement('id', $sNS);

      $integer = $schema->getType('integer', $schema->getNamespace('xs'));
      $sqlint = $schema->getType('int', $schema->getNamespace('sql'));

      $manager->assertTrue($id->getType()->doExtends($integer));
      $manager->assertTrue($id->getType()->doExtends($sqlint));

      return true;
    </tst:expected>
  </tst:test>
</tst:tests>