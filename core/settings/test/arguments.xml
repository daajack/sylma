<?xml version="1.0" encoding="utf-8"?>
<tst:tests xmlns:tst="http://www.sylma.org/core/settings/test" xmlns="http://www.sylma.org" xmlns:html="http://www.w3.org/1999/xhtml">
  <tst:description>Basic @class Arguments methods</tst:description>
  <tst:test name="A basic get()">
    <tst:prepare>return new Arguments(array('abc' => '123'))</tst:prepare>
    <tst:expected>return $args->get('abc') === '123'</tst:expected>
  </tst:test>
  <tst:test name="A basic set()">
    <tst:prepare>$arg = new Arguments; $arg->set('abc', '123'); return $arg;</tst:prepare>
    <tst:expected>return $args->get('abc') === '123'</tst:expected>
  </tst:test>
  <tst:test name="A set() of array">
    <tst:prepare>
      $arg = new Arguments;
      $arg->set('abc', array('def' => '123', 'ghi' => '456'));
      return $arg;
    </tst:prepare>
    <tst:expected>
      return
        $args->get('abc/def') === '123' &amp;&amp;
        $args->get('abc/ghi') === '456'
    </tst:expected>
  </tst:test>
  <tst:test name="A set() of array with stepped get">
    <tst:prepare>
      $arg = new Arguments;
      $arg->set('abc', array('def' => '123', 'ghi' => '456'));
      return $arg;
    </tst:prepare>
    <tst:expected>
      return
        $args->get('abc')->get('def') === '123' &amp;&amp;
        $args->get('abc')->get('ghi') === '456'
    </tst:expected>
  </tst:test>
  <tst:test name="A two levels depth set()">
    <tst:prepare>
      $arg = new Arguments;
      $arg->set('abc/def', '123');
      return $arg;
    </tst:prepare>
    <tst:expected>return $args->get('abc/def') === '123'</tst:expected>
  </tst:test>
  <tst:test name="A two levels depth set() of array">
    <tst:prepare>
      $arg = new Arguments;
      $arg->set('abc/def', array('ghi' => '123', 'jkl' => '456'));
      return $arg;
    </tst:prepare>
    <tst:expected>
      return
        $args->get('abc/def/ghi') === '123' &amp;&amp;
        $args->get('abc/def/jkl') === '456'
      </tst:expected>
  </tst:test>
  <tst:test name="Two two levels depth set()">
    <tst:prepare>
      $arg = new Arguments;
      $arg->set('abc/def', '123');
      $arg->set('abc/ghi', '345');
      return $arg;
    </tst:prepare>
    <tst:expected>
      return
        $args->get('abc/def') === '123' &amp;&amp;
        $args->get('abc/ghi') === '345'
    </tst:expected>
  </tst:test>
  <tst:test name="Two two levels depth set() with floats">
    <tst:prepare>
      $arg = new Arguments;
      $arg->set('abc/def', 1.23);
      $arg->set('abc/ghi', 3.45);
      return $arg;
    </tst:prepare>
    <tst:expected>
      return
        $args->get('abc/def') === 1.23 &amp;&amp;
        $args->get('abc/ghi') === 3.45
    </tst:expected>
  </tst:test>
  <tst:test name="A two levels depth set() with array and tmp object">
    <tst:prepare>
      $arg = new Arguments;
      $test = $arg->set('abc/def', array('ghi' => '123'));
      $test->set('lmn', '456');
      $arg->get('abc/def')->set('opq', 789);
      return $arg;
    </tst:prepare>
    <tst:expected>
      return
        $args->get('abc/def/ghi') === '123' &amp;&amp;
        $args->get('abc/def/lmn') === '456' &amp;&amp;
        $args->get('abc/def/opq') === 789
    </tst:expected>
  </tst:test>
  <tst:test name="Merge">
    <tst:prepare>
      $arg1 = new Arguments(array(
        'abc' => 123, // not erased
        'def' => '456',
      ));
      $arg2 = new Arguments(array(
        'def' => '789',
        'ghi' => true
      ));
      
      $arg1->merge($arg2);
      return $arg1;
    </tst:prepare>
    <tst:expected>
      return
        $args->get('abc') === 123 &amp;&amp;
        $args->get('def') === '789' &amp;&amp;
        $args->get('ghi') === true
    </tst:expected>
  </tst:test>
  <tst:test name="Merge two levels depth">
    <tst:prepare>
      $arg1 = new Arguments(array(
        'abc' => array(
          'def' => '123',
          'ghi' => 456,
        ),
        'def' => '789', // not erased
        'ghi' => array(
          'lmn' => 1010,
          'opq' => true,
        ),
        'rst' => 2323,
      ));
      $arg2 = new Arguments(array(
        'abc' => 'alpha', // simple erase array
        'ghi' => array( // array erase array
          'uvw' => false,
          'opq' => 3434,
        ),
        'rst' => array( // array erase simple
          'xyz' => 'beta'
        ),
      ));
      
      $arg1->merge($arg2);
      return $arg1;
    </tst:prepare>
    <tst:expected>
      return
        $args->get('abc') === 'alpha' &amp;&amp;
        $args->get('def') === '789' &amp;&amp;
        $args->get('ghi/lmn') === 1010 &amp;&amp;
        $args->get('ghi/opq') === 3434 &amp;&amp;
        $args->get('ghi/uvw') === false &amp;&amp;
        $args->get('rst/xyz') === 'beta'
    </tst:expected>
  </tst:test>
</tst:tests>

