<?xml version="1.0" encoding="utf-8"?>
<tst:tests xmlns:tst="http://www.sylma.org/parser/action/test/grouped" xmlns="http://www.sylma.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:le="http://www.sylma.org/parser/action" xmlns:li="http://www.sylma.org/parser/caller" xmlns:lm="http://www.sylma.org/parser/action/basic">
  <tst:description>Basic</tst:description>
  <tst:test name="Return simple string">
    <le:action>
      <le:settings>
        <le:return format="php-string"/>
      </le:settings>
      <le:string>abc</le:string>
    </le:action>
    <tst:expected>
      $sResult = $controler->getResult('txt');

      return
        $sResult === 'abc';
    </tst:expected>
  </tst:test>
  <tst:test name="Return array of strings imploded">
    <le:action>
      <le:text>directory :</le:text>
      <lm:file path="samples/simple.txt">
        <li:call name="read"/>
      </lm:file>
    </le:action>
    <tst:expected>
      $sResult = $controler->getResult('txt');

      return
        $sResult === 'directory :123';
    </tst:expected>
  </tst:test>
  <tst:test name="Return string concat with file content">
    <le:action>
      <le:string>
        <le:text>directory :</le:text>
        <lm:file path="samples/simple.txt">
          <li:call name="read"/>
        </lm:file>
      </le:string>
    </le:action>
    <tst:expected>
      $sResult = $controler->getResult('txt');

      return
        $sResult === 'directory :123';
    </tst:expected>
  </tst:test>
  <tst:test name="Embedded strings">
    <le:action>
      <le:string>
        <le:text>directory :</le:text>
        <le:text>
          <le:string>
            <le:text>12</le:text>
            <le:text>3</le:text>
          </le:string>
        </le:text>
      </le:string>
    </le:action>
    <tst:expected>
      $sResult = $controler->getResult('txt');

      return
        $sResult === 'directory :123';
    </tst:expected>
  </tst:test>
  <tst:test name="Array of embedded strings">
    <le:action>
      <le:text>directory :</le:text>
      <le:text>
        <le:string>
          <le:text>12</le:text>
          <le:text>3</le:text>
        </le:string>
      </le:text>
    </le:action>
    <tst:expected>
      $sResult = $controler->getResult('txt');

      return
        $sResult === 'directory :123';
    </tst:expected>
  </tst:test>
  <tst:test name="Null">
    <le:action>
      <le:null/>
    </le:action>
    <tst:expected>
      $result = $controler->getResult('object');

      return
        $result === null;
    </tst:expected>
  </tst:test>
  <tst:test name="Boolean">
    <le:action>
      <le:bool value="true"/>
      <le:boolean value="false"/>
      <le:boolean>
        <le:string>salut</le:string>
      </le:boolean>
      <le:boolean>
        <le:null/>
      </le:boolean>
      <le:boolean>0</le:boolean>
      <le:boolean>1</le:boolean>
    </le:action>
    <tst:expected>
      $aResult = $controler->getResult('array');

      return
        $aResult === array(
          true, false, true, false, false, true
        );
    </tst:expected>
  </tst:test>
  <tst:test name="Boolean exception 1" catch="\sylma\core\exception">
    <le:action>
      <le:bool value="truw"/>
    </le:action>
  </tst:test>
  <tst:test name="Boolean exception 2" catch="\sylma\core\exception">
    <le:action>
      <le:bool value="1"/>
    </le:action>
  </tst:test>
  <tst:test name="Boolean exception 3" catch="\sylma\core\exception">
    <le:action>
      <le:bool/>
    </le:action>
  </tst:test>
  <tst:test name="Boolean exception 4" catch="\sylma\core\exception">
    <le:action>
      <le:boolean>
        <le:text>abc</le:text>
        <le:null/>
      </le:boolean>
    </le:action>
  </tst:test>
  <tst:test name="Array">
    <le:action>
      <le:array>
        <le:boolean le:key="a" value="true"/>
        <le:text le:key="b">123</le:text>
        <le:string>hello</le:string>
        <le:null/>
        <le:item>world</le:item>
      </le:array>
    </le:action>
    <tst:expected>
      $aResult = $controler->getResult('array');

      return
        $aResult === array(
          'a' => true,
          'b' => '123',
          'hello',
          null,
          'world',
        );
    </tst:expected>
  </tst:test>
  <tst:test name="Array exception 1" catch="\sylma\core\exception">
    <le:action>
      <le:array>
        abc
        <le:null/>
      </le:array>
    </le:action>
  </tst:test>
  <tst:test name="Create variable" disabled="true">
    <le:action>
      <div>
        <p>
          <le:document le:set-variable="doc">
            <h1>hello</h1>
          </le:document>
        </p>
        <le:get-variable name="doc"/>
      </div>
    </le:action>
    <tst:node>
      <div xmlns="http://www.sylma.org"><p><h1 xmlns="http://www.sylma.org">hello</h1></p><h1>hello</h1></div>
    </tst:node>
    <tst:expected>
      $result = $controler->getResult('dom');
      $node = $controler->getArgument('node');
dspm($result->asString());
      return
        $controler->compareNodes($result, $node);
    </tst:expected>
  </tst:test>
  <tst:test name="Get one NS">
    <le:action>
      <le:ns le:ns="null">le</le:ns>
    </le:action>
    <tst:expected>
      $aResult = $controler->getResult('array');

      return
        $aResult === array('le' => 'http://www.sylma.org/parser/action');
    </tst:expected>
  </tst:test>
  <tst:test name="Get null NS" disabled="true">
    <le:action>
      <le:ns>*hello</le:ns>
    </le:action>
    <tst:expected>
      $aResult = $controler->getResult('array');

      return
        $aResult === array('hello' => 'http://www.sylma.org');
    </tst:expected>
  </tst:test>
  <tst:test name="Get multiple NS">
    <le:action>
      <le:ns le:ns="null" tst:ns="null">le,tst</le:ns>
    </le:action>
    <tst:expected>
      $aResult = $controler->getResult('array');

      return
        $aResult === array(
          'le' => 'http://www.sylma.org/parser/action',
          'tst' => 'http://www.sylma.org/parser/action/test/grouped',
        );
    </tst:expected>
  </tst:test>
</tst:tests>