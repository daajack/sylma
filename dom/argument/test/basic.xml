<?xml version="1.0" encoding="utf-8"?>
<tst:tests xmlns:tst="http://www.sylma.org/core/argument/test" xmlns="http://www.sylma.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:arg="http://www.sylma.org/core/argument/test" arg:class="basic">
  <tst:description>Basic</tst:description>
  <tst:test name="A simple read">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('simple.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');

      return $arg->read('abc') === '123'
    </tst:expected>
  </tst:test>
  <tst:test name="A read with to levels">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('simple.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');

      return $arg->read('def/sub') === '456'
    </tst:expected>
  </tst:test>
  <tst:test name="A simple get">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('simple.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');
      $def = $arg->get('def');

      return
        $def instanceof \sylma\core\argument &amp;&amp;
        $def->read('sub') === '456';
    </tst:expected>
  </tst:test>
  <tst:test name="A bad get" catch="\sylma\core\exception">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('simple.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');
      $arg->get('abc');

      return false;
    </tst:expected>
  </tst:test>
  <tst:test name="A get of empty element">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('simple.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');
      $result = $arg->get('empty');

      return
        $result instanceof \sylma\core\argument &amp;&amp;
        $result->read() === '';
    </tst:expected>
  </tst:test>
  <tst:test name="A simple read attribute">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('simple.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');

      return $arg->read('@attr') == 'root';
    </tst:expected>
  </tst:test>
  <tst:test name="A two levels read attribute">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('simple.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');

      return $arg->read('def/@value') == 'hello';
    </tst:expected>
  </tst:test>
  <tst:test name="A prefixed simple read">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('prefixed.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');

      return $arg->read('abc') === '123'
    </tst:expected>
  </tst:test>
  <tst:test name="A prefixed read with to levels">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('prefixed.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');

      return $arg->read('def/sub') === '456'
    </tst:expected>
  </tst:test>
  <tst:test name="A prefixed read with different namespaces">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('prefixed.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');
      $arg->registerNamespaces(array('test' => 'http://www.sylma.org/dom/argument/test/samples/bla'));

      return $arg->read('def/test:sub') === '789'
    </tst:expected>
  </tst:test>
  <tst:test name="A prefixed read with conflicted namespaces" disabled="true">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('prefixed.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');
      $arg->registerNamespaces(array(
        'http://www.sylma.org/dom/argument/test/samples/bla',
        'bla' => 'http://www.sylma.org/dom/argument/test/',
      ));

      return $arg->read('bla:def/sub') === '789'
    </tst:expected>
  </tst:test>
  <tst:test name="Simple token use">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('simple.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');
      $arg->registerToken('item', 'item', 'name');

      return $arg->read('def/#item:key1') === 'item1'
    </tst:expected>
  </tst:test>
  <tst:test name="Read boolean attribute">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('simple.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');

      return
        $arg->read('true/@val') === true &amp;&amp;
        $arg->read('false/@val') === false;
    </tst:expected>
  </tst:test>
  <tst:test name="Iterate">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('simple.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');
      $aResult = array();

      foreach ($arg->get('def') as $sName => $val) {
        $aResult[$sName] = $val->read();
      }

      return $aResult === array(
        'sub' => '456',
        'item' => 'item2',
        'other' => 'other',
      );
    </tst:expected>
  </tst:test>
  <tst:test name="Iterate over 1 item">
    <tst:prepare>
      $controler->set('arg', $controler->createArgument('single-item.xml'));
    </tst:prepare>
    <tst:expected>
      $arg = $controler->get('arg');
      $aResult = array();

      foreach ($arg as $sName => $val) {
      //dspf($val->asString());
      //dspf($val->read('@name'));
        $aResult[$sName] = $val->read('@name');
      }
//dspf($aResult);
      return $aResult === array(
        'argument' => 'path',
      );
    </tst:expected>
  </tst:test>
</tst:tests>

