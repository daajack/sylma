<?xml version="1.0" encoding="utf-8"?>
<tst:tests
  xmlns:tst="http://www.sylma.org/modules/tester/parser"
  xmlns="http://2014.sylma.org/html"
  xmlns:view="http://2013.sylma.org/view"
  xmlns:tpl="http://2013.sylma.org/template"
  xmlns:sql="http://2013.sylma.org/storage/sql"
  xmlns:ls="http://2013.sylma.org/parser/security"
  xmlns:le="http://2013.sylma.org/action"
  xmlns:cls="http://2013.sylma.org/core/factory"

  xmlns:user="http://2013.sylma.org/view/test/sample1"
  xmlns:group="http://2013.sylma.org/view/test/sample2"
>
  <tst:description>Various</tst:description>
  <tst:test name="Change connection">
    <tst:document>
      <view:view user:ns="ns">

        <sql:resource>
          <sql:id>1</sql:id>
          <sql:connection>test</sql:connection>
        </sql:resource>

        <view:schema>samples/user1d.xql</view:schema>

        <tpl:template match="user:user">
          <li>
            <tpl:apply select="name"/>
          </li>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <li>root</li>
    </tst:node>
  </tst:test>
  <tst:test name="Change connection bis" disabled="true">
    <tst:document>
      <view:view user:ns="ns">

        <sql:connection>test</sql:connection>

        <sql:resource>
          <sql:id>3</sql:id>
        </sql:resource>

        <view:schema>samples/user1e.xql</view:schema>

        <tpl:template match="user:user">
          <li>
            <tpl:apply select="name"/>
          </li>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <li>webmaster</li>
    </tst:node>
  </tst:test>
  <tst:test name="Required on table">
    <!-- table is parsed before render and can return null although it has found a template -->
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource/>
        <view:schema>samples/user2.xql</view:schema>
        <tpl:template>
          <h3>
            <tpl:apply select="group_id/id" required="x"/>
            <tpl:read select="name"/>
          </h3>
        </tpl:template>
        <tpl:template match="*">
          <sql:filter>2</sql:filter>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <h3>root</h3>
    </tst:node>
  </tst:test>
  <tst:test name="Security parser" xmlns:ls="http://2013.sylma.org/parser/security">
    <tst:document>
      <view:view>
        <sql:resource/>
        <view:schema>samples/user1.xql</view:schema>
        <sql:filter name="id">1</sql:filter>
        <tpl:template>
          <div>
            <h1 ls:owner="root" ls:group="user" ls:mode="710">
              <tpl:read select="name"/>
            </h1>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h1>root</h1>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Schema dependency update">
    <tst:node>
      <div>hello</div>
    </tst:node>
    <tst:expected>

      $file1 = $manager->copyFile('samples/user1.xql');
      $file2 = $manager->copyFile('samples/sample1.vml');

      $result = $file2->run();
      $cache = $manager->getManager('parser')->getCachedFile($file2);
      $time1 = $cache->getUpdateTime();

      sleep(1);
      $file2->run();

      $manager->assertEquals($time1, $cache->getUpdateTime(), 'no update 1');

      sleep(1);
      touch($file1->getRealPath());
      clearstatcache();

      $file2->run();
      $time2 = $cache->getUpdateTime();

      $manager->assertTrue($time2 > $time1, 'updated');

      sleep(1);
      //clearstatcache();

      $file2->run();

      $manager->assertTrue($cache->getUpdateTime() === $time2, 'no update 2');

      $manager->compareNodes($result, $manager->get('node'));

      return true;

    </tst:expected>
  </tst:test>
</tst:tests>