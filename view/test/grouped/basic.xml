<?xml version="1.0" encoding="utf-8"?>
<tst:tests
  xmlns:tst="http://www.sylma.org/modules/tester/parser"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns:view="http://2013.sylma.org/view"
  xmlns:tpl="http://2013.sylma.org/template"
  xmlns:sql="http://2013.sylma.org/storage/sql"
  xmlns:ls="http://2013.sylma.org/parser/security"
  xmlns:le="http://2013.sylma.org/action"

  xmlns:user="http://2013.sylma.org/view/test/sample1"
  xmlns:group="http://2013.sylma.org/view/test/sample2"

  xmlns:build="http://2013.sylma.org/parser/reflector/builder"
>
  <tst:description>Basic</tst:description>
  <tst:datas name="mysql://user">
    id;name;email
    1;root;root@sylma.org
    2;admin;admin@sylma.org
    3;webmaster;webmaster@sylma.org
  </tst:datas>
  <tst:test name="XSD Schema" disabled="true">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user.xsd</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name"/></h3>
            <a href="mailto:email">test</a>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><h3>def</h3><a href="mailto:email">test</a></div>
    </tst:node>
  </tst:test>
  <tst:test name="XQL Schema">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name"/></h3>
            <a href="mailto:email">test</a>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><h3>admin</h3><a href="mailto:email">test</a></div>
    </tst:node>
  </tst:test>
  <tst:test name="special chars in content">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3>&lt;<tpl:apply select="name"/>&gt;</h3>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><h3>&lt;admin&gt;</h3></div>
    </tst:node>
  </tst:test>
  <tst:test name="White spaces">
    <!-- @todo : Need DOM whitespaces update -->
    <tst:expected>

      $doc = $manager->getScript('samples/whitespaces.vml');

      $sValue = &lt;&lt;&lt;EOT
&lt;div&gt;
  &lt;span&gt;abc&lt;/span&gt;
  &lt;span&gt;def&lt;/span&gt;
  &lt;span&gt;ghi&lt;/span&gt;
  &lt;h4&gt;title1&lt;/h4&gt;
  &lt;em&gt;emphase&lt;/em&gt;
  &lt;span&gt;jkl&lt;/span&gt;
&lt;/div&gt;
EOT;
      $manager->assertEquals($sValue, $doc->asString($doc::STRING_INDENT));
      return true;

    </tst:expected>
  </tst:test>
  <tst:test name="multiple resources">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <sql:resource>
          <sql:id>3</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <h3>
            <tpl:read select="name"/>
          </h3>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <h3>webmaster</h3>
    </tst:node>
  </tst:test>
  <tst:test name="multiple schemas">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>3</sql:id>
        </sql:resource>
        <view:schema>samples/unknown</view:schema>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <h3>
            <tpl:read select="name"/>
          </h3>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <h3>webmaster</h3>
    </tst:node>
  </tst:test>
  <tst:test name="cdata">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:cdata>hello <tpl:read select="name"/></tpl:cdata>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><![CDATA[hello admin]]></div>
    </tst:node>
  </tst:test>
  <tst:test name="html chars in db">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>1</sql:id>
        </sql:resource>
        <view:schema>samples/user1b.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:read select="source"/></h3>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h3>
          <span>root bloc</span>
        </h3>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="html chars not converted">
    <tst:document>
      <view:view sql:ns="ns" build:return="result">
        <sql:resource>
          <sql:id>1</sql:id>
        </sql:resource>
        <view:schema>samples/user1b.xql</view:schema>
        <tpl:template>
          <tpl:read select="source/text()"/>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:expected>

      $result = $manager->read('result');

      $manager->assertEqual($result, '&lt;span>root bloc&lt;/span>');

      return true;

    </tst:expected>
  </tst:test>
  <tst:test name="Apply value">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name/value()"/></h3>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><h3>admin</h3></div>
    </tst:node>
  </tst:test>
  <tst:test name="Apply element">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name"/></h3>
            <h4><tpl:apply select="email" mode="unexisting"/></h4>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h3>admin</h3>
        <h4/>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Required apply on simple">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name" required="x"/></h3>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h3>admin</h3>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Required apply on complex" catch="\sylma\core\exception" disabled="true">
    <!-- Exception on build -->
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply mode="anymode" required="x"/></h3>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
  </tst:test>
  <tst:test name="No result">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource optional="x">
          <sql:id>999</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name/value()"/></h3>
          </div>
        </tpl:template>
        <tpl:template mode="sylma:empty">
          <div>
            <strong>No "<tpl:read select="name()"/>" result</strong>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><strong>No "user" result</strong></div>
    </tst:node>
  </tst:test>
  <tst:test name="Template precedence">
    <tst:document>
      <view:view>
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:apply select="id,name"/>
          </div>
        </tpl:template>
        <tpl:template match="*">
          <first>
            <tpl:read/>
          </first>
        </tpl:template>
        <tpl:template match="*">
          <second>
            <tpl:read/>
          </second>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <second>2</second>
        <second>admin</second>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Template once">
    <tst:document>
      <view:view>
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:apply select="id,name"/>
          </div>
        </tpl:template>
        <tpl:template match="*">
          <first>
            <tpl:read/>
          </first>
        </tpl:template>
        <tpl:template match="*" once="x">
          <second>
            <tpl:read/>
          </second>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <second>2</second>
        <first>admin</first>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Value in string">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:read select="'id={id};name={name}'"/>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>id=2;name=admin</div>
    </tst:node>
  </tst:test>
  <tst:test name="Slash in string">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>1</sql:id>
        </sql:resource>
        <view:schema>samples/user1b.xql</view:schema>
        <tpl:template>
          <div><tpl:read select="'test/{name}'"/></div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>test/root</div>
    </tst:node>
  </tst:test>
  <tst:test name="Expression in read">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:read select="(id = 2)"/></h3>
            <h4><tpl:read select="(id != 2)"/></h4>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h3>1</h3>
        <h4/>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Return argument">
    <tst:document>
      <view:view sql:ns="ns" build:class="\sylma\core\argument\Readable" build:output="array">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <le:array>
            <tpl:read le:name="name" select="name"/>
            <tpl:read le:name="email" select="email"/>
          </le:array>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:expected>

      $manager->assertEqual($manager->get('result')->query(), array(
        'name' => 'admin',
        'email' => 'admin@sylma.org',
      ));

      return true;

    </tst:expected>
  </tst:test>
  <tst:test name="Return result">
    <tst:document>
      <view:view sql:ns="ns" build:return="result">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <tpl:read select="email"/>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:expected>

      $manager->assertEqual($manager->read('result'), 'admin@sylma.org');

      return true;

    </tst:expected>
  </tst:test>
  <tst:test name="Array with dom content" catch="\sylma\core\exception" disabled="true">
    <!-- exception on compile -->
    <tst:document>
      <view:view sql:ns="ns" build:output="array">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <abc/>
        </tpl:template>
      </view:view>
    </tst:document>
  </tst:test>
  <tst:test name="Multiple attribute values">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3 class="{name/value()}" test="{name/alias()}"/>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><h3 class="admin" test="name"/></div>
    </tst:node>
  </tst:test>
  <tst:test name="Two templates">
    <tst:document>
      <view:view user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:apply select="email"/>
          </div>
        </tpl:template>
        <tpl:template match="user:email">
          <a href="mailto:email"><tpl:apply/></a>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><a href="mailto:email">admin@sylma.org</a></div>
    </tst:node>
  </tst:test>
  <tst:test name="Apply all">
    <tst:document>
      <view:view user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:apply select="*"/>
          </div>
        </tpl:template>
        <tpl:template match="user:name">
          <h3><tpl:apply/></h3>
        </tpl:template>
        <tpl:template match="user:email">
          <a href="mailto:email"><tpl:apply/></a>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>2<h3>admin</h3><a href="mailto:email">admin@sylma.org</a></div>
    </tst:node>
  </tst:test>
  <tst:test name="Apply all with exclusion">
    <tst:document>
      <view:view user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:apply select="* ^ id,name"/>
          </div>
        </tpl:template>
        <tpl:template match="user:name">
          <h3><tpl:apply/></h3>
        </tpl:template>
        <tpl:template match="user:email">
          <a href="mailto:email"><tpl:apply/></a>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><a href="mailto:email">admin@sylma.org</a></div>
    </tst:node>
  </tst:test>
  <tst:test name="Apply all excluding type">
    <tst:document>
      <view:view user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user2.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:apply select="* ^ sql:foreign"/>
          </div>
        </tpl:template>
        <tpl:template match="*">
          <input name="{alias()}"/>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <input name="id"/>
        <input name="name"/>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Multiple apply">
    <tst:document>
      <view:view user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="user:name"/></h3>
            <span><tpl:apply select="user:name"/></span>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><h3>admin</h3><span>admin</span></div>
    </tst:node>
  </tst:test>
  <tst:test name="Match all namespace">
    <tst:document>
      <view:view user:ns="ns" group:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user2.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:apply select="name"/>
            <tpl:apply select="group_id/ref()"/>
          </div>
        </tpl:template>
        <tpl:template match="user:*">
          <span><tpl:apply/></span>
        </tpl:template>
        <tpl:template match="group:*">
          <strong><tpl:read select="name"/></strong>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><span>admin</span><strong>group01</strong></div>
    </tst:node>
  </tst:test>
  <tst:test name="Using mode">
    <tst:document>
      <view:view user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:apply select="user:name" mode="hello"/>
          </div>
        </tpl:template>
        <tpl:template match="user:name">
          <h4><tpl:apply/></h4>
        </tpl:template>
        <tpl:template match="user:name" mode="hello">
          <h3><tpl:apply select="value()"/></h3>
        </tpl:template>
        <tpl:template match="user:name" mode="world">
          <h5><tpl:apply/></h5>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><h3>admin</h3></div>
    </tst:node>
  </tst:test>
  <tst:test name="Using mode on root">
    <tst:document>
      <view:view user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:apply mode="hello"/>
          </div>
        </tpl:template>
        <tpl:template mode="hello">
          <h3>root</h3>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><h3>root</h3></div>
    </tst:node>
  </tst:test>
  <tst:test name="Multiple root template">
    <tst:document>
      <view:view user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <h3>root</h3>
        </tpl:template>
        <tpl:template>
          <div>
            <tpl:apply select="name"/>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>admin</div>
    </tst:node>
  </tst:test>
  <tst:test name="Multiple root template with mode">
    <tst:document>
      <view:view user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template mode="hello">
          <h3>root</h3>
        </tpl:template>
        <tpl:template>
          <div>
            <tpl:apply mode="hello"/>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><h3>root</h3></div>
    </tst:node>
  </tst:test>
  <tst:test name="XMode">
    <tst:document>
      <view:view user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:apply select="name" xmode="mymode"/>
            <tpl:apply mode="abc" xmode="def"/>
          </div>
        </tpl:template>
        <tpl:template mode="abc" xmode="badmode">
          <h5/>
        </tpl:template>
        <tpl:template match="user:name">
          <tpl:apply/>
        </tpl:template>
        <tpl:template match="*" xmode="mymode">
          <h4>
            <tpl:read/>
          </h4>
        </tpl:template>
        <tpl:template match="*">
          <h2>
            <tpl:read/>
          </h2>
        </tpl:template>
        <tpl:template match="*" xmode="badmode">
          <h3/>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h4>admin</h4>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Template match multiple names">
    <tst:document>
      <view:view user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <tpl:apply select="*"/>
          </div>
        </tpl:template>
        <tpl:template match="user:name | user:email">
          <input name="{name()}" value="{value()}"/>
        </tpl:template>
        <tpl:template match="user:*">
          <span><tpl:read/></span>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <span>2</span>
        <input name="name" value="admin"/>
        <input name="email" value="admin@sylma.org"/>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Simple import">
    <tst:prepare>
      $manager->setArgument('result', $manager->getScript('samples/import1.vml'));
    </tst:prepare>
    <tst:node>
      <div><h4>world</h4></div>
    </tst:node>
  </tst:test>
  <tst:test name="Simple extends">
    <tst:prepare>
      $manager->setArgument('result', $manager->getScript('samples/extends1.vml'));
    </tst:prepare>
    <tst:node>
      <div>world</div>
    </tst:node>
  </tst:test>
  <tst:test name="External parser">
    <tst:document>
      <view:view>
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name"/></h3>
            <a href="mailto:email" ls:owner="root" ls:group="root" ls:mode="750">test</a>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div><h3>admin</h3><a href="mailto:email">test</a></div>
    </tst:node>
  </tst:test>
  <tst:test name="Simple path argument" disabled="true">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name"/></h3>
            <tpl:apply>
              <tpl:read tpl:name="test2" select="email"/>
            </tpl:apply>
          </div>
        </tpl:template>
        <tpl:template>
          <tpl:argument name="test2"/>
          <span><tpl:read select="$test2"/></span>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h3>admin</h3>
        <span>admin@sylma.org</span>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Simple content argument">
    <tst:document>
      <view:view sql:ns="ns" user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name"/></h3>
            <span>
              <tpl:apply select="email">
                <tpl:text tpl:name="test2">world</tpl:text>
              </tpl:apply>
            </span>
          </div>
        </tpl:template>
        <tpl:template match="user:email">
          <tpl:argument name="test2"/>
          <tpl:read/><br/><tpl:read select="$test2"/>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h3>admin</h3>
        <span>admin@sylma.org<br/>world</span>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Content argument with default value">
    <tst:document>
      <view:view sql:ns="ns" user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name"/></h3>
            <span>
              <tpl:apply select="email"/>
            </span>
          </div>
        </tpl:template>
        <tpl:template match="user:email">
          <tpl:argument name="test2" default="alias()"/>
          <tpl:read/><br/><tpl:read select="$test2"/>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h3>admin</h3>
        <span>admin@sylma.org<br/>email</span>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Argument with default content">
    <tst:document>
      <view:view sql:ns="ns" user:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name"/></h3>
            <span>
              <tpl:apply select="email"/>
            </span>
          </div>
        </tpl:template>
        <tpl:template match="user:email">
          <tpl:argument name="test2">
            <tpl:read select="alias()"/>
          </tpl:argument>
          <tpl:read/><br/><tpl:read select="$test2"/>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h3>admin</h3>
        <span>admin@sylma.org<br/>email</span>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Constant">
    <tst:document>
      <view:view sql:ns="ns">
        <tpl:constant name="path">email</tpl:constant>
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user1.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:read select="name"/></h3>
            <span><tpl:apply use="path"/></span>
            <em><tpl:read use="path"/></em>
            <h4><tpl:apply select="$$path"/></h4>
          </div>
        </tpl:template>
        <tpl:template match="*">
          <tpl:read/>
          <tpl:text>!</tpl:text>
        </tpl:template>

      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h3>admin</h3>
        <span>admin@sylma.org!</span>
        <em>admin@sylma.org</em>
        <h4>email</h4>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Format on tree">
    <!-- should be in sql -->
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user4.xql</view:schema>
        <tpl:template>
          <div>
            <h3><tpl:apply select="name"/></h3>
            <span><tpl:apply select="email/format(length=8)"/></span>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h3>admin</h3>
        <span>admin@sy ...</span>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Format component">
    <tst:document>
      <view:view sql:ns="ns">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user4.xql</view:schema>
        <tpl:template>
          <div>
            <h3>
              <tpl:apply select="name"/>
            </h3>
            <span>
              <tpl:format type="string" arguments="length=8">
                <tpl:read select="email"/>
              </tpl:format>
            </span>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <div>
        <h3>admin</h3>
        <span>admin@sy ...</span>
      </div>
    </tst:node>
  </tst:test>
  <tst:test name="Import document tree">
    <tst:document>
      <view:view sql:ns="ns" xmlns:tree1="http://2013.sylma.org/view/parser/test/grouped/samples/tree1">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user4.xql</view:schema>
        <tpl:template>
          <form>
            <h3><tpl:apply select="name"/></h3>
            <span><tpl:apply import="samples/tree1.xml"/></span>
          </form>
        </tpl:template>
        <tpl:template match="tree1:sample1">
          <div>
            <span><tpl:read select="abc"/></span>
            <tpl:apply select="def"/>
            <!--<tpl:apply select="def/lmn"/>-->
          </div>
        </tpl:template>
        <tpl:template match="tree1:def">
          <ul>
            <tpl:apply select="*"/>
          </ul>
        </tpl:template>
        <tpl:template match="tree1:*">
          <li href="{name()}"><tpl:read/></li>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <form>
        <h3>admin</h3>
        <span>
          <div>
            <span>123</span>
            <ul>
              <li href="ghi">hello</li>
              <li href="lmn">world</li>
            </ul>
          </div>
        </span>
      </form>
    </tst:node>
  </tst:test>
  <tst:test name="Import reflector">
    <tst:document>
      <view:view sql:ns="ns" xmlns:rfl="http://2013.sylma.org/view/parser/test/grouped/samples/reflector1">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user4.xql</view:schema>
        <tpl:template>
          <form>
            <h3><tpl:apply select="name"/></h3>
            <fieldset><tpl:apply reflector="samples\Reflector1"/></fieldset>
          </form>
        </tpl:template>
        <tpl:template match="rfl:sample1">
          <div>
            <span><tpl:read select="test()"/></span>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <form>
        <h3>admin</h3>
        <fieldset>
          <div>
            <span>Hello world !</span>
          </div>
        </fieldset>
      </form>
    </tst:node>
  </tst:test>
  <tst:test name="Token in insert view" disabled="true">
    <!-- TODO -->
    <tst:document>
      <view:view sql:ns="ns" xmlns:rfl="http://2013.sylma.org/view/parser/test/grouped/samples/reflector1" mode="insert">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user4.xql</view:schema>
        <tpl:template>
          <form>
            <h3><tpl:apply select="name"/></h3>
            <tpl:apply select="name"/>
          </form>
        </tpl:template>
        <tpl:template match="*">
          <tpl:register/>
          <div>
            <h4>
              <tpl:token name="src">test</tpl:token>
            </h4>
            <span><tpl:read select="alias()"/></span>
          </div>
        </tpl:template>
      </view:view>
    </tst:document>
  </tst:test>
  <tst:test name="Read path on apply" disabled="true">
    <tst:document>
      <view:view sql:ns="ns" xmlns:tree1="http://2013.sylma.org/view/parser/test/grouped/samples/tree1">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user4.xql</view:schema>
        <tpl:template>
          <form>
            <h3><tpl:apply select="name"/></h3>
            <span><tpl:apply import="samples/tree2.xml"/></span>
          </form>
        </tpl:template>
        <tpl:template match="tree1:sample1">
          <div>
            <span><tpl:read select="abc"/></span>
            <tpl:apply read="def/lmn"/>
          </div>
        </tpl:template>
        <tpl:template match="tree1:*">
          <li><tpl:read/></li>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <form>
        <h3>admin</h3>
        <span>
          <div>
            <span>123</span>
            <li>smith</li>
          </div>
        </span>
      </form>
    </tst:node>
  </tst:test>
  <tst:test name="Import argument options" disabled="true">
    <tst:document>
      <view:view sql:ns="ns" xmlns:tree1="http://2013.sylma.org/view/parser/test/grouped/samples/tree1">
        <sql:resource>
          <sql:id>2</sql:id>
        </sql:resource>
        <view:schema>samples/user4.xql</view:schema>
        <tpl:template>
          <form><tpl:apply import="samples/tree3.xml"/></form>
        </tpl:template>
        <tpl:template match="tree1:sample1">
          <div>
            <span><tpl:read select="abc"/></span>
            <tpl:apply select="*"/>
          </div>
        </tpl:template>
        <tpl:template match="tree1:test1">
          <li href="{name()}"><tpl:apply select="*"/></li>
        </tpl:template>
        <tpl:template match="tree1:*">
          <span><tpl:read/></span>
        </tpl:template>
      </view:view>
    </tst:document>
    <tst:node>
      <form>
        <div>
          <span>123</span>
          <li href="test1">
            <span>456</span>
            <span>smith</span>
          </li>
          <span>john</span>
        </div>
      </form>
    </tst:node>
  </tst:test>
</tst:tests>